apiVersion: v1
kind: Template
metadata:
  name: verwerkingsregister
objects:
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    name: verwerkingsregister
    namespace: webcomponentsqa
    labels:
      app: verwerkingsregister
      component: verwerkingsregister
  spec:
    replicas: 2
    selector:
      app: verwerkingsregister
      component: verwerkingsregister
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        name: verwerkingsregister
        namespace: webcomponentsqa
        labels:
          app: verwerkingsregister
          component: verwerkingsregister
      spec:
        containers:
        - env:
          - name: HOST
            value: 0.0.0.0
          - name: DEPLOY_ENV
            value: qa
          - name: NODE_VERSION_URL
            value: https://semver.io/node/resolve/9.x
          image: docker-registry.default.svc:5000/webcomponentsqa/verwerkingsregister-qa:latest
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 30
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: verwerkingsregister
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: 
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 10m
              memory: 25Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers: []
- apiVersion: v1
  kind: Service
  metadata:
    name: verwerkingsregister
    namespace: webcomponentsqa
    labels:
      app: verwerkingsregister
      component: verwerkingsregister
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: verwerkingsregister
      component: verwerkingsregister
    sessionAffinity: None
    type: ClusterIP
